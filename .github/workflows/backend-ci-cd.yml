name: Backend CI

on:
  push:
    branches: [main, develop]
    paths:
      - "backend/**"
      - ".github/workflows/backend-ci-cd.yml"
  pull_request:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/backend-ci-cd.yml"

jobs:
  experimental-backend-ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_DB: tododb_test
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        working-directory: backend
        run: pnpm install --no-frozen-lockfile

      - name: Create test database user
        run: |
          PGPASSWORD=testpass psql -h localhost -U testuser -d tododb_test -c "CREATE USER testappuser WITH PASSWORD 'testapppass';"
          PGPASSWORD=testpass psql -h localhost -U testuser -d tododb_test -c "GRANT ALL PRIVILEGES ON DATABASE tododb_test TO testappuser;"
          PGPASSWORD=testpass psql -h localhost -U testuser -d tododb_test -c "GRANT ALL ON SCHEMA public TO testappuser;"
          PGPASSWORD=testpass psql -h localhost -U testuser -d tododb_test -c "GRANT CREATE ON SCHEMA public TO testappuser;"

      - name: Build app for migrations
        working-directory: backend
        run: pnpm run build
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: tododb_test
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_APP_USER: testappuser
          POSTGRES_APP_PASSWORD: testapppass
          JWT_SECRET: test-secret

      - name: Run database migrations
        working-directory: backend
        run: pnpm run migration:run
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: tododb_test
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_APP_USER: testappuser
          POSTGRES_APP_PASSWORD: testapppass
          JWT_SECRET: test-secret

      - name: Run unit tests
        working-directory: backend
        run: pnpm run test:e2e
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: tododb_test
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_APP_USER: testappuser
          POSTGRES_APP_PASSWORD: testapppass
          JWT_SECRET: test-secret
